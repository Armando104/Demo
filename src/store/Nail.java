/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package store;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;

/**
 *
 * @author Akilis
 */
public class Nail extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Nail() {
        initComponents();
        setTitle("AMEGERWA Stock Management System......Created By Akilis Co.[+250783236883] [Version 1.1]");
        setLocation(100, 20);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        birthdayEvaluator1 = new com.toedter.calendar.demo.BirthdayEvaluator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        close_qty = new javax.swing.JTextField();
        close_type = new javax.swing.JComboBox();
        close_date = new com.toedter.calendar.JDateChooser();
        prod_id = new javax.swing.JComboBox();
        jButton15 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel65 = new javax.swing.JLabel();
        close_date_search = new com.toedter.calendar.JDateChooser();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        closing_id = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        date1 = new com.toedter.calendar.JDateChooser();
        jLabel73 = new javax.swing.JLabel();
        date2 = new com.toedter.calendar.JDateChooser();
        jButton30 = new javax.swing.JButton();
        jLabel76 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton35 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nail_id = new javax.swing.JLabel();
        qty_update = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        prod = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        prod1 = new javax.swing.JComboBox();
        jLabel29 = new javax.swing.JLabel();
        itariki = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        details = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        search_date = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        un = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        from = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        to = new com.toedter.calendar.JDateChooser();
        jButton31 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        sale_id = new javax.swing.JLabel();
        qty_update_nail_sales = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jPanel29 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        description2 = new javax.swing.JTextArea();
        jLabel45 = new javax.swing.JLabel();
        amfrw = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        saledate = new com.toedter.calendar.JDateChooser();
        jLabel49 = new javax.swing.JLabel();
        material = new javax.swing.JComboBox();
        jLabel54 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        slip1 = new javax.swing.JTextField();
        slip2 = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        client = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        search_date_sale = new com.toedter.calendar.JDateChooser();
        jButton23 = new javax.swing.JButton();
        jLabel74 = new javax.swing.JLabel();
        date11 = new com.toedter.calendar.JDateChooser();
        jLabel75 = new javax.swing.JLabel();
        date22 = new com.toedter.calendar.JDateChooser();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        expense_id = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jPanel23 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        description1 = new javax.swing.JTextArea();
        jLabel31 = new javax.swing.JLabel();
        examount = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        purchasingdate1 = new com.toedter.calendar.JDateChooser();
        jLabel33 = new javax.swing.JLabel();
        business = new javax.swing.JComboBox();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        search_date_expense = new com.toedter.calendar.JDateChooser();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        date111 = new com.toedter.calendar.JDateChooser();
        jLabel38 = new javax.swing.JLabel();
        date222 = new com.toedter.calendar.JDateChooser();
        jButton34 = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        summarydate = new com.toedter.calendar.JDateChooser();
        jButton12 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        totexp = new javax.swing.JTextField();
        totsal = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        solde1 = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        solde2 = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        totexp1 = new javax.swing.JTextField();
        totsal1 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        summarydate1 = new com.toedter.calendar.JDateChooser();
        jLabel40 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jButton18 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jButton19 = new javax.swing.JButton();
        jLabel68 = new javax.swing.JLabel();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jButton20 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane1.setForeground(new java.awt.Color(255, 153, 51));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(102, 153, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jLabel61.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel61.setText("Material");

        jLabel62.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel62.setText("Operation Type");

        jLabel63.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel63.setText("Operating Date");

        jLabel64.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel64.setText("Qty");

        close_qty.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        close_qty.setText("0.0");

        close_type.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        close_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Opening", "Closing" }));
        close_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close_typeActionPerformed(evt);
            }
        });

        close_date.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        prod_id.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        prod_id.setModel(new javax.swing.DefaultComboBoxModel(Product.getProductForNailList_Sales().toArray()));
        prod_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prod_idActionPerformed(evt);
            }
        });

        jButton15.setBackground(new java.awt.Color(0, 255, 153));
        jButton15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton15.setText("Save Data");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jTable3.setAutoCreateRowSorter(true);
        jTable3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            Closing.view(),
            new String [] {
                "No", "Date", "Material","Opening Qty", "Closing Qty"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable3);

        jLabel65.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel65.setText("Date from");

        close_date_search.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jButton16.setBackground(new java.awt.Color(255, 255, 0));
        jButton16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton16.setText("Search Data");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setBackground(new java.awt.Color(255, 204, 204));
        jButton17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton17.setText("Refresh");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton28.setBackground(java.awt.Color.yellow);
        jButton28.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton28.setText("Update Data");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton29.setBackground(java.awt.Color.red);
        jButton29.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton29.setText("Delete Data");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        closing_id.setBackground(new java.awt.Color(102, 153, 255));
        closing_id.setForeground(new java.awt.Color(102, 153, 255));
        closing_id.setText(" ");

        jLabel72.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel72.setText("Search by date");

        jLabel73.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel73.setText("Date to");

        jButton30.setBackground(new java.awt.Color(255, 204, 102));
        jButton30.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton30.setText("Search");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jLabel76.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel76.setText("Date");

        jButton35.setText("Generate Report");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(close_type, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(close_date, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(prod_id, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(close_qty, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(closing_id, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel65)
                        .addGap(14, 14, 14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(close_date_search, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(date1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .addComponent(jButton30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(close_date_search, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton16)
                                    .addComponent(jLabel72, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(closing_id, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(jLabel65)))
                                .addGap(11, 11, 11))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(date2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(date1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel73, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel63))
                            .addComponent(close_date, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel76))
                        .addGap(18, 18, 18)
                        .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel61)
                            .addComponent(prod_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel62)
                            .addComponent(close_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel64)
                            .addComponent(close_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(106, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Opening and Closing Nails Transactions", jPanel4);

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Vijaya", 1, 36)); // NOI18N
        jLabel1.setText("We Care About Your Business");

        nail_id.setBackground(new java.awt.Color(255, 255, 255));
        nail_id.setForeground(new java.awt.Color(255, 255, 255));
        nail_id.setText(" ");

        qty_update.setForeground(new java.awt.Color(255, 255, 255));
        qty_update.setText(" ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(nail_id, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(qty_update, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(nail_id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(8, 8, 8))
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(qty_update, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            NailS.view() ,
            new String [] {
                "No", "Materials","Quantity","Date","Details"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1194, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        prod.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        prod.setText("0.0");

        jButton3.setBackground(new java.awt.Color(0, 204, 102));
        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton3.setText("Record");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel26.setText("Nail Type");

        jLabel27.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel27.setText("Qty");

        prod1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        prod1.setModel(new javax.swing.DefaultComboBoxModel(Product.getProductForNailList().toArray()));

        jLabel29.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel29.setText("Date");

        details.setColumns(20);
        details.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        details.setRows(5);
        details.setText("details");
        jScrollPane3.setViewportView(details);

        jButton4.setBackground(new java.awt.Color(255, 204, 0));
        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 102, 0));
        jButton7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton7.setText("Delete");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Search");

        jButton8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton8.setText("Search by Date");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(255, 102, 102));
        jButton9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton9.setText("Clean Table");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(51, 204, 0));
        jButton10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton10.setText("Refresh Table");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel32.setText("Selling Unitprice");

        un.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        un.setText("0.0");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Search From");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("To");

        jButton31.setBackground(new java.awt.Color(255, 255, 0));
        jButton31.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton31.setText("Search");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel26)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 63, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(un, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                            .addComponent(prod)
                            .addComponent(prod1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itariki, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(search_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(to, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(from, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addGap(31, 31, 31)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addGap(11, 11, 11)
                                    .addComponent(jLabel5)))
                            .addGap(18, 18, 18)))
                    .addComponent(jButton31, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel29)
                            .addComponent(itariki, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prod1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(un, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(search_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(from, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(to, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton10))
                            .addComponent(jButton31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nail Made: Record the nails made per day ");

        jButton6.setBackground(new java.awt.Color(255, 204, 102));
        jButton6.setFont(new java.awt.Font("Wide Latin", 1, 12)); // NOI18N
        jButton6.setText("Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(194, 194, 194)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Nail Made", jPanel1);

        jPanel26.setBackground(new java.awt.Color(102, 153, 255));

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));
        jPanel27.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jLabel43.setFont(new java.awt.Font("Vijaya", 1, 36)); // NOI18N
        jLabel43.setText("We Care About Your Business");

        sale_id.setBackground(new java.awt.Color(255, 255, 255));
        sale_id.setForeground(new java.awt.Color(255, 255, 255));
        sale_id.setText(" ");

        qty_update_nail_sales.setBackground(new java.awt.Color(255, 255, 255));
        qty_update_nail_sales.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sale_id, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(qty_update_nail_sales, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sale_id, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel43)
                        .addComponent(qty_update_nail_sales, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel28.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jTable7.setAutoCreateRowSorter(true);
        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            NailSale.view() ,
            new String [] {
                "No","Material","Qty","Tot Amount","Received Amount","Remaining Amount","Date","Details","Exped.Slip No","Deposit Slip no","Client"
            }
        ));
        jTable7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable7MouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(jTable7);

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10)
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
        );

        jPanel29.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jButton11.setBackground(new java.awt.Color(0, 204, 102));
        jButton11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton11.setText("Record");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel44.setText("Received Amount");

        description2.setColumns(20);
        description2.setRows(5);
        description2.setText("Details");
        jScrollPane11.setViewportView(description2);

        jLabel45.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel45.setText("Exped.Slip No");

        amfrw.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        amfrw.setText("0.0 ");

        jLabel46.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel46.setText("Date");

        saledate.setBackground(new java.awt.Color(153, 153, 153));
        saledate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel49.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel49.setText("Nail Type");

        material.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        material.setModel(new javax.swing.DefaultComboBoxModel(Product.getProductForNailList_Sales().toArray()));
        material.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                materialActionPerformed(evt);
            }
        });

        jLabel54.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel54.setText("Quantity");

        qty.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        qty.setText("0.0 ");
        qty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                qtyFocusLost(evt);
            }
            public void focusGained(java.awt.event.FocusEvent evt) {
                qtyFocusGained(evt);
            }
        });
        qty.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                qtyInputMethodTextChanged(evt);
            }
        });
        qty.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                qtyPropertyChange(evt);
            }
        });
        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtyKeyTyped(evt);
            }
        });

        jLabel56.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel56.setText("Deposit Slip No");

        slip1.setText("***");

        slip2.setText("***");

        jLabel57.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel57.setText("Selling Unitprice");

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(51, 255, 153));
        jTextField3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextField3.setText("0.0");
        jTextField3.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField3InputMethodTextChanged(evt);
            }
        });

        jLabel58.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel58.setText("Tot Amount");

        jTextField4.setEditable(false);
        jTextField4.setBackground(new java.awt.Color(153, 153, 153));
        jTextField4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextField4.setText("0.0");

        jLabel59.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel59.setText("Client");

        client.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        client.setText("None");

        jLabel60.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel60.setText("Bags");

        jButton21.setBackground(new java.awt.Color(255, 204, 0));
        jButton21.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton21.setText("Update");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setBackground(new java.awt.Color(255, 51, 51));
        jButton22.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton22.setText("Delete");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jLabel69.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel69.setText("Frw");

        jLabel70.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel70.setText("Search by Date");

        jLabel71.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel71.setText("Frw");

        jButton23.setBackground(new java.awt.Color(204, 204, 255));
        jButton23.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton23.setText("Search data");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jLabel74.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel74.setText("Search from");

        jLabel75.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel75.setText("To");

        jButton32.setBackground(new java.awt.Color(204, 204, 255));
        jButton32.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton32.setText("Search Data");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jButton33.setBackground(new java.awt.Color(255, 204, 204));
        jButton33.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton33.setText("Refresh Table");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addComponent(jLabel44)
                                .addGap(18, 18, 18)
                                .addComponent(amfrw)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel71))
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addComponent(jLabel58)
                                .addGap(64, 64, 64)
                                .addComponent(jTextField4)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel69)))
                        .addGap(125, 125, 125))
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel29Layout.createSequentialGroup()
                                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(79, 79, 79)
                                    .addComponent(material, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel29Layout.createSequentialGroup()
                                    .addComponent(jLabel46)
                                    .addGap(122, 122, 122)
                                    .addComponent(saledate, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel29Layout.createSequentialGroup()
                                    .addComponent(jLabel57)
                                    .addGap(24, 24, 24)
                                    .addComponent(jTextField3)))
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addComponent(jLabel54)
                                .addGap(91, 91, 91)
                                .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel60)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel56)
                            .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)))
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(client, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(slip2, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(slip1)
                    .addComponent(jButton33, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(date11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(date22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jButton32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(search_date_sale, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                                            .addComponent(jLabel75)
                                            .addGap(75, 75, 75))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                                            .addComponent(jLabel70)
                                            .addContainerGap()))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton22, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(slip2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel56)))
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel29Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(date11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(date22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel70)))
                                .addGap(5, 5, 5)))
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel29Layout.createSequentialGroup()
                                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel58)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel69))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel44)
                                            .addComponent(amfrw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel71)))
                                    .addGroup(jPanel29Layout.createSequentialGroup()
                                        .addComponent(search_date_sale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel46)
                            .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(client, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(saledate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel49)
                                    .addComponent(material, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel57)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(slip1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel45))
                                .addGap(25, 25, 25)))
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel54)
                            .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel60)))))
                .addGap(17, 17, Short.MAX_VALUE))
        );

        jLabel48.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("Nails Sales: This window allow you record the sold nails");

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel48)
                .addGap(195, 195, 195)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(1, 1, 1)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Nail Sales", jPanel26);

        jPanel20.setBackground(new java.awt.Color(102, 153, 255));

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));
        jPanel21.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jLabel28.setFont(new java.awt.Font("Vijaya", 1, 36)); // NOI18N
        jLabel28.setText("We Care About Your Business");

        expense_id.setBackground(java.awt.Color.white);
        expense_id.setForeground(java.awt.Color.white);
        expense_id.setText(" ");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(expense_id, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(204, 204, 204)
                .addComponent(jLabel28)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expense_id, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jTable5.setAutoCreateRowSorter(true);
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            Expense.viewExpenseNail(),
            new String [] {
                "No","Business", "Description","Amount","Date"
            }
        ));
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTable5);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
        );

        jPanel23.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jButton5.setBackground(new java.awt.Color(0, 204, 102));
        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton5.setText("Record");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel30.setText("Amount");

        description1.setColumns(20);
        description1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        description1.setRows(5);
        description1.setText("No Details\n");
        jScrollPane7.setViewportView(description1);

        jLabel31.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel31.setText("Search by Date");

        examount.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        examount.setText("0.0");

        jLabel34.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel34.setText("Date");

        purchasingdate1.setBackground(new java.awt.Color(153, 153, 153));
        purchasingdate1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel33.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel33.setText("Business");

        business.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        business.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "nail" }));

        jButton24.setBackground(new java.awt.Color(255, 255, 0));
        jButton24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton24.setText("Update");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setBackground(new java.awt.Color(255, 102, 0));
        jButton25.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton25.setText("Delete");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel36.setText("Details");

        jButton26.setBackground(new java.awt.Color(255, 255, 0));
        jButton26.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton26.setText("Search");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setBackground(new java.awt.Color(255, 204, 204));
        jButton27.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton27.setText("Refresh Table");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel37.setText("To");

        jLabel38.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel38.setText("Search From");

        jButton34.setBackground(new java.awt.Color(255, 255, 0));
        jButton34.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton34.setText("Search");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jLabel55.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel55.setText("____________________________________________________________________________________________________________________");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel55)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addGap(105, 105, 105)
                                .addComponent(examount, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(109, 109, 109))
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel23Layout.createSequentialGroup()
                                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel34))
                                        .addGap(88, 88, 88)
                                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(business, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(purchasingdate1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel36))
                                    .addGroup(jPanel23Layout.createSequentialGroup()
                                        .addComponent(jLabel31)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(search_date_expense, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7)
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(date111, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(date222, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton25))
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(jButton34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton27)))))
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(business, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(purchasingdate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(examount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane7)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel55)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton27)
                    .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(search_date_expense, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(date111, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(date222, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );

        jLabel35.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Nail Expenses: This window allows you to record expenses from nails transactions");

        jButton1.setBackground(new java.awt.Color(255, 204, 153));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Nail Expenses", jPanel20);

        jPanel8.setBackground(new java.awt.Color(102, 153, 255));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Vijaya", 1, 36)); // NOI18N
        jLabel4.setText("Current Nails Store");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(451, 451, 451))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            Nail_Store.view(),
            new String [] {
                "No", "Product Name","Qty(Bags)","UnitPrice"
            }
        ));
        jTable2.setGridColor(new java.awt.Color(255, 255, 255));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1194, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Nail  Store", jPanel8);

        jPanel2.setBackground(new java.awt.Color(102, 153, 255));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jLabel20.setFont(new java.awt.Font("Vijaya", 1, 36)); // NOI18N
        jLabel20.setText("We Care About Your Business");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(366, 366, 366))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel17.setBackground(new java.awt.Color(102, 153, 255));
        jPanel17.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        jLabel39.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel39.setText("Date");

        summarydate.setBackground(new java.awt.Color(153, 153, 153));

        jButton12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton12.setText("Check");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel41.setText("Total Expenses");

        jLabel42.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel42.setText("Total Sales");

        totexp.setEditable(false);
        totexp.setText(" ");

        totsal.setEditable(false);
        totsal.setText(" ");

        jLabel47.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel47.setText("Income Or Loss");

        solde1.setEditable(false);
        solde1.setText(" ");

        jLabel50.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel50.setText("********************Nails Business Summary***********");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        solde2.setEditable(false);
        solde2.setText(" ");

        jLabel51.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel51.setText("Remained");

        jLabel52.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel52.setText("Nails Made");

        totexp1.setEditable(false);
        totexp1.setText(" ");

        totsal1.setEditable(false);
        totsal1.setText(" ");

        jLabel53.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel53.setText("Nails Sold");

        jButton14.setText("Check");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        summarydate1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel40.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel40.setText("Date");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(251, Short.MAX_VALUE)
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(summarydate1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton14)
                .addGap(76, 76, 76))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel51)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(solde2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel52)
                        .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(totsal1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(totexp1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(49, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(summarydate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(111, 111, 111)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(solde2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel51))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(100, 100, 100)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel53)
                                .addComponent(totsal1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel52))
                        .addComponent(totexp1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(51, Short.MAX_VALUE)))
        );

        jPanel11.setBackground(new java.awt.Color(204, 204, 255));

        jButton18.setBackground(new java.awt.Color(255, 204, 0));
        jButton18.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton18.setText(" Export Nails Sales  To PDF");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jLabel66.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel66.setText("Select a Date");

        jLabel67.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel67.setText("Select a Date");

        jButton19.setBackground(new java.awt.Color(0, 204, 153));
        jButton19.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton19.setText("Export Nails Made  to PDF");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jLabel68.setFont(new java.awt.Font("Vijaya", 1, 24)); // NOI18N
        jLabel68.setText("Select a Date");

        jButton20.setBackground(new java.awt.Color(102, 255, 102));
        jButton20.setText("Export Opening and Closing to PDF");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel66)
                    .addComponent(jLabel67)
                    .addComponent(jLabel68))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                    .addComponent(jDateChooser3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton20, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel67))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateChooser3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel68, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel66)
                        .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jButton20)
                        .addGap(5, 5, 5)))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel41)
                                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totsal, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totexp, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(solde1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(summarydate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton12)
                                .addGap(82, 82, 82))))
                    .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel17Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel39)
                                    .addComponent(summarydate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel50)
                        .addGap(22, 22, 22)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel42)
                                    .addComponent(totsal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel41))
                            .addComponent(totexp, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel47)
                            .addComponent(solde1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel22.setFont(new java.awt.Font("Vijaya", 1, 36)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Nails transactions summary");

        jButton13.setText(" Back");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(276, 276, 276)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Summary", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            int op = JOptionPane.showConfirmDialog(null, "Would You Like To Record Data?");
            if (op == 0) {
                Expense p = new Expense();
                //Product pr = Product.getProductFromName(prodlist.getSelectedItem().toString());
                //p.setpr.getProd_id());
                p.setExpense_id(Expense.getMaxID());
                p.setDescription(description1.getText());
                p.setBusiness(business.getSelectedItem().toString());
                p.setAmount(Double.parseDouble(examount.getText()));
                //p.setPurchasing_unitprice(Double.parseDouble(purchasingunitprice.getText()));
                p.setRecording_date(purchasingdate1.getDate());
                if (p.insert()) {
                    JOptionPane.showMessageDialog(null, "Successfully Recorded");
                } else {
                    JOptionPane.showMessageDialog(null, "Not Recorded", "Sorry", JOptionPane.ERROR_MESSAGE);
                }

                jTable5.setModel(new javax.swing.table.DefaultTableModel(
                        Expense.viewExpenseNail(),
                        new String[]{
                    "No", "Business", "Description", "Amount", "Date"
                }));
            }
        } catch (Exception ex) {
        }




    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
//        Object v[][] = new Object[1000][5];
//        List<Sale> l = Sale.getStudentList();
//        
//        for (int i = 0; i < l.size(); i++) {
//            
//        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        MainForm hd = new MainForm();
        hd.setVisible(true);         // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        int op = JOptionPane.showConfirmDialog(null, "Would you like to Update data?", "Notice", JOptionPane.INFORMATION_MESSAGE);

        if (op == 0) {





            try {

                Product pr = Product.getProductFromName(material.getSelectedItem().toString());
                Nail_Store ns = Nail_Store.getPurchase_From_Prod_ID(pr.getProd_id() + "");
                if (ns != null) {
                    if (ns.getQty() >= Double.parseDouble(qty.getText())) {
                        NailSale p = new NailSale();
                        //Product pr = Product.getProductFromName(prodlist.getSelectedItem().toString());
                        //p.setpr.getProd_id());
                        p.setSale_id(NailSale.getMaxID());
                        p.setMaterial(material.getSelectedItem().toString());
                        p.setEmp("");
                        p.setClient(client.getText());
                        p.setQty(Double.parseDouble(qty.getText()));
                        p.setAmount(Double.parseDouble(amfrw.getText()));
                        //p.setPurchasing_unitprice(Double.parseDouble(purchasingunitprice.getText()));
                        p.setRecording_date(saledate.getDate());
                        p.setDetails(description2.getText());
                        p.setSlip1(slip1.getText());
                        p.setSlip2(slip2.getText());
                        if (p.insert()) {
                            ns.setQty(p.getQty());
                            System.out.println("QTY:" + p.getQty());
                            System.out.println(ns.Update_Stock_Out());
                            JOptionPane.showMessageDialog(null, "Successfully Recorded");
                        } else {
                            JOptionPane.showMessageDialog(null, "Not Recorded", "Sorry", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {

                        JOptionPane.showMessageDialog(null, "You can't sell more than:" + ns.getQty() + " nails in the store", "Sorry", JOptionPane.WARNING_MESSAGE);

                    }
                } else {
                    JOptionPane.showMessageDialog(null, "The Product Is not found in the nails store...Retry", "Sorry", JOptionPane.WARNING_MESSAGE);

                }





                jTable7.setModel(new javax.swing.table.DefaultTableModel(
                        NailSale.view(),
                        new String[]{
                    "No","Material","Qty","Tot Amount","Received Amount","Remaining Amount","Date","Details","Exped.Slip No","Deposit Slip no","Client"
   }));
                jTable2.setModel(new javax.swing.table.DefaultTableModel(
                        Nail_Store.view(),
                        new String[]{
                    "No", "Product Name", "Qty"
                }));
            } catch (Exception ex) {
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        MainForm hd = new MainForm();
        hd.setVisible(true);         // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed

        double totsales = 0.0, totexpens = 0.0, firstsolde = 0.0, secondsolde;
        List<NailSale> l = NailSale.getStudentList();
        List<Expense> ll = Expense.getStudentList();
        //calcul of sales..............
        Calendar cal = new GregorianCalendar();
        cal.setTime(summarydate.getDate());
        int day, mon = (cal.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal.get(Calendar.DAY_OF_MONTH);
        String fdate;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

        }
        //JOptionPane.showMessageDialog(null, .toString());
        System.out.println("fadate.....>>>" + fdate);
        for (int i = 0; i < l.size(); i++) {
            System.out.println("saledate....>>>" + l.get(i).getRecording_date() + "   >>>>>fdate" + fdate);
            if (l.get(i).getRecording_date().toString().equalsIgnoreCase(fdate)) {

                totsales = totsales + l.get(i).getAmount();
            }
        }
        //end calcul of sales
        for (int ii = 0; ii < ll.size(); ii++) {

            if (ll.get(ii).getRecording_date().toString().equalsIgnoreCase(fdate)) {
                if (ll.get(ii).getBusiness().equalsIgnoreCase("nail")) {
                    totexpens = totexpens + ll.get(ii).getAmount();
                }
            }
        }
        double sts = Stockout.getStockoutFromHardW(fdate);
        secondsolde = totsales - totexpens;

        totsal.setText(totsales + "");
        totexp.setText(totexpens + "");
        if (secondsolde < 0) {
            solde1.setBackground(Color.RED);
            solde1.setForeground(Color.white);
            solde1.setText(secondsolde + "");

        } else {
            solde1.setBackground(Color.GREEN);
            solde1.setForeground(Color.black);
            solde1.setText(secondsolde + "");
        }
        //solde2.setText(sts + "");
        //totsales=0.0;
        //totexpens=0.0;
        //secondsolde=0.0;
        //        try {
        //
        //
        //           String rcv ="nn";
        //
        //            //
        //
        //            if (rcv.equals("")) {
        //            } else {
        //                //String[] r = rcv.split("%");
        //                //String t[];
        //                String rrep = JOptionPane.showInputDialog("Please Enter The Report Name");
        //                try {
        //                    File fff = new File("C://Reports Files");
        //                    fff.mkdir();
        //                    File ff = new File(fff.getPath(), rrep + ".pdf");
        //                    Document document = new Document();
        //                    PdfWriter.getInstance(document, new FileOutputStream("Report.pdf"));
        //                    FileOutputStream fg = new FileOutputStream(ff);
        //
        //                    PdfWriter.getInstance(document, fg);
        //
        //                    fg.write(10024);
        //                    fg.flush();
        //                    document.open();
        //                    // document.open();
        //                    //            Image image = Image.getInstance("cherry.jpg");
        //                    //            image.scaleAbsolute(250, 100);
        //                    //            document.add((Element) image);
        //                    String dd = "";
        //                    Calendar cal = new GregorianCalendar();
        //                    dd = cal.get(Calendar.DAY_OF_MONTH) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" + cal.get(Calendar.YEAR);
        //
        //                    Font font2 = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD | Font.NORMAL);
        //                    Paragraph par = new Paragraph(new Chunk("Summary Report of "+summarydate.getDate(), font2));
        //                    document.add(new Paragraph("AMEGERWA                               Done on," + dd, FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));
        //                   // document.add(new Paragraph("POBOX:4606 KIGALI ", FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));
        //                    //document.add(new Paragraph("KIGALI-RWANDA", FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));
        //                    //
        //                    document.add(new Paragraph("\n"));
        //                    par.setAlignment(Element.ALIGN_CENTER);
        //                    document.add(par);
        //                    document.add(new Paragraph("\n"));
        //                    PdfPTable summarytable = new PdfPTable(2);
        //                    PdfPCell pcell = new PdfPCell(new Paragraph(""));
        //                    summarytable.setHorizontalAlignment(Element.ALIGN_LEFT);
        //                    //pcell.setColspan(4);
        //                    //pcell.setHorizontalAlignment(Element.ALIGN_CENTER);
        //                    //pcell.setBackgroundColor(BaseColor.GREEN);
        //                    //table.addCell(pcell);
        //                    summarytable.addCell("Previous Solde");
        //                     summarytable.addCell("Next Solde");
        ////                    summarytable.addCell("Names");
        ////                    summarytable.addCell("Gender");
        ////                    summarytable.addCell("ID No");
        //
        //
        //                    document.add(summarytable);
        //                    int s=0;
        //                    //for (int i=0;i<) {
        //                        PdfPTable tab = new PdfPTable(2);
        //                        tab.setTotalWidth(1001);
        //                       // t = r1.split("#");
        //                        s++;
        //                         PdfPCell cell0 = new PdfPCell(new Paragraph("40 RFW", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
        //
        //                        PdfPCell cell1 = new PdfPCell(new Paragraph("100 RWF" + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
        ////                        PdfPCell cell2 = new PdfPCell(new Paragraph(t[1] + " " + t[2], FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
        ////                        PdfPCell cell3 = new PdfPCell(new Paragraph(t[3], FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
        ////                        PdfPCell cell4 = new PdfPCell(new Paragraph(t[4], FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
        //                        tab.addCell(cell0);
        //                        tab.addCell(cell1);
        ////                        tab.addCell(cell2);
        ////                        tab.addCell(cell3);
        ////                        tab.addCell(cell4);
        //                        tab.setHorizontalAlignment(Element.ALIGN_LEFT);
        //                        document.add(tab);
        //                    //}
        //
        //                    document.add(new Paragraph("\n\nPrepared by...........................\n"));
        //                    document.add(new Paragraph("Signature\n\n_____________________________"));
        //                    document.close();
        //                    JOptionPane.showMessageDialog(null, "Report saved!");
        //                } catch (Exception e) {
        //                    e.printStackTrace();
        //                    //JOptionPane.showMessageDialog(null, e);
        //                }        // TODO add your handling code here:
        //
        //            }
        //
        //            //ss.close();
        //
        //        } catch (Exception ex) {
        //            ex.printStackTrace();
        //        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        this.setVisible(false);
        MainForm hd = new MainForm();
        hd.setVisible(true);         // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        System.out.println(".......................");
        if (prod.getText() == null || prod.getText().length() < 2) {
        } else {
            try {
                int op = JOptionPane.showConfirmDialog(null, "Would You Like To Save?");
                if (op == 0) {
                    Product pr = Product.getProductFromName((prod1.getSelectedItem().toString()));
                    Nail_Store ns = Nail_Store.getPurchase_From_Prod_ID(pr.getProd_id() + "");
                    if (ns != null) {
                        ns.setQty(Double.parseDouble(prod.getText()));
                        ns.setPurchasing_unitprice(Double.parseDouble(un.getText()));
                        ns.Update_Stock_IN();//update ya nail stock in


                        NailS p = new NailS();
                        p.setProd_id(NailS.getMaxID());
                        p.setProdname(prod1.getSelectedItem().toString());
                        p.setRecordingdate(itariki.getDate());
                        p.setQty(Double.parseDouble(prod.getText()));

                        p.setDetails(details.getText());
                        if (p.insert()) {
                            JOptionPane.showMessageDialog(null, "Record Successfully Saved");
                        } else {
                            JOptionPane.showMessageDialog(null, "Record Not Saved", "Sorry", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {

                        NailS p = new NailS();
                        p.setProd_id(NailS.getMaxID());
                        p.setProdname(prod1.getSelectedItem().toString());
                        p.setRecordingdate(itariki.getDate());
                        p.setQty(Double.parseDouble(prod.getText()));
                        p.setDetails(details.getText());

                        if (p.insert()) {
                            JOptionPane.showMessageDialog(null, "Record Successfully Saved");
                        } else {
                            JOptionPane.showMessageDialog(null, "Record Not Saved", "Sorry", JOptionPane.ERROR_MESSAGE);
                        }
                        // insert into nail_store for the first time
                        ns = new Nail_Store();
                        ns.setDescription("***");
                        ns.setProd_id(pr.getProd_id());
                        ns.setPurchasing_date(new Date());
                        ns.setPurchasing_unitprice(Double.parseDouble(un.getText()));
                        ns.setQty(p.getQty());
                        ns.setSelling_unitprice(0.0);
                        ns.insert();
                    }




                    jTable1.setModel(new javax.swing.table.DefaultTableModel(
                            NailS.view(),
                            new String[]{
                        "No", "Material", "Quantity", "Date", "Details"
                    }));
                    jTable2.setModel(new javax.swing.table.DefaultTableModel(
                            Nail_Store.view(),
                            new String[]{
                        "No", "Product Name", "Qty(Bags)", "UnitPrice"
                    }));
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }        // TODO add your handling code here:
        }
        material.setModel(new javax.swing.DefaultComboBoxModel(Product.getProductForNailList_Sales().toArray()));
prod_id.setModel(new javax.swing.DefaultComboBoxModel(Product.getProductForNailList_Sales().toArray()));

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.setVisible(false);
        MainForm hd = new MainForm();
        hd.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        double totsales = 0.0, totexpens = 0.0, firstsolde = 0.0, secondsolde;
        List<NailSale> l = NailSale.getStudentList();
        List<NailS> ll = NailS.getProductForHardwareList();
        //calcul of sales..............
        Calendar cal = new GregorianCalendar();
        cal.setTime(summarydate1.getDate());
        int day, mon = (cal.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal.get(Calendar.DAY_OF_MONTH);
        String fdate;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

        }
        //JOptionPane.showMessageDialog(null, .toString());
        System.out.println("fadate.....>>>" + fdate);
        for (int i = 0; i < l.size(); i++) {
            System.out.println("saledate....>>>" + l.get(i).getRecording_date() + "   >>>>>fdate" + fdate);
            if (l.get(i).getRecording_date().toString().equalsIgnoreCase(fdate)) {

                totsales = totsales + l.get(i).getQty();
            }
        }
        //end calcul of sales
        for (int ii = 0; ii < ll.size(); ii++) {

            if (ll.get(ii).getRecordingdate().toString().equalsIgnoreCase(fdate)) {
                //  if(ll.get(ii).getBusiness().equalsIgnoreCase("nail")){
                totexpens = totexpens + ll.get(ii).getQty();
                //}
            }
        }
        double sts = Stockout.getStockoutFromHardW(fdate);
        secondsolde = totexpens - totsales;

        totsal1.setText(totsales + "");
        totexp1.setText(totexpens + "");
        if (secondsolde < 0) {
            solde2.setBackground(Color.RED);
            solde2.setForeground(Color.white);
            solde2.setText(secondsolde + "");

        } else {
            solde2.setBackground(Color.GREEN);
            solde2.setForeground(Color.BLACK);
            solde2.setText(secondsolde + "");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked

        jTable2.setAutoCreateRowSorter(true);
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            int n = jTable1.getSelectedRow();
            int no = jTable1.getSelectedRow();
            prod.setText(jTable1.getValueAt(no, 2) + "");
            details.setText(jTable1.getValueAt(no, 4) + "");
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            itariki.setDate(sdf.parse(jTable1.getValueAt(no, 3) + ""));
            nail_id.setText(jTable1.getValueAt(no, 0) + "");
            prod1.setEditable(true);
            prod1.setSelectedItem(jTable1.getValueAt(no, 1) + "");
            prod1.setEditable(false);
            qty_update.setText(jTable1.getValueAt(no, 2) + "");
            //        jTable1.setAutoCreateRowSorter(true);

        } catch (ParseException ex) {
            //Logger.getLogger(Banking_Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        System.out.println(".......................");
        if (prod.getText() == null || prod.getText().length() < 2) {
        } else {
            try {
                int op = JOptionPane.showConfirmDialog(null, "Would You Like To Update data?");
                if (op == 0) {
                    Product pr = Product.getProductFromName((prod1.getSelectedItem().toString()));
                    Nail_Store ns = Nail_Store.getPurchase_From_Prod_ID(pr.getProd_id() + "");
                    if (ns != null) {
                        ns.setQty(Double.parseDouble(prod.getText()));
                        double qt1 = Double.parseDouble(qty_update.getText());
                        double qt2 = Double.parseDouble(prod.getText());
                        if (qt1 > qt2) {
                            ns.setQty(qt1 - qt2);
                            ns.Update_Stock_Out();
                        } else {
                            ns.setQty(qt2 - qt1);
                            ns.Update_Stock_IN();
                        }
                        //update ya nail stock in


                        NailS p = NailS.getProduct(nail_id.getText());
                        //p.setProd_id(NailS.getMaxID());
                        p.setProdname(prod1.getSelectedItem().toString());
                        p.setRecordingdate(itariki.getDate());
                        p.setQty(Double.parseDouble(prod.getText()));
                        p.setDetails(details.getText());
                        if (p.update()) {
                            JOptionPane.showMessageDialog(null, "Record Successfully Updated");
                        } else {
                            JOptionPane.showMessageDialog(null, "Record Not Updated", "Sorry", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {

                        NailS p = new NailS();
                        p.setProd_id(NailS.getMaxID());
                        p.setProdname(prod1.getSelectedItem().toString());
                        p.setRecordingdate(itariki.getDate());
                        p.setQty(Double.parseDouble(prod.getText()));
                        p.setDetails(details.getText());
                        if (p.insert()) {
                            JOptionPane.showMessageDialog(null, "Record Successfully Saved");
                        } else {
                            JOptionPane.showMessageDialog(null, "Record Not Saved", "Sorry", JOptionPane.ERROR_MESSAGE);
                        }
                        // insert into nail_store for the first time
                        ns = new Nail_Store();
                        ns.setDescription("***");
                        ns.setProd_id(pr.getProd_id());
                        ns.setPurchasing_date(new Date());
                        ns.setPurchasing_unitprice(0.0);
                        ns.setQty(p.getQty());
                        ns.setSelling_unitprice(0.0);
                        ns.insert();
                    }




                    jTable1.setModel(new javax.swing.table.DefaultTableModel(
                            NailS.view(),
                            new String[]{
                        "No", "Material", "Quantity", "Date", "Details"
                    }));
                    jTable2.setModel(new javax.swing.table.DefaultTableModel(
                            Nail_Store.view(),
                            new String[]{
                        "No", "Product Name", "Qty"
                    }));
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }        // TODO add your handling code here:
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        System.out.println(".......................");
        if (prod.getText() == null || prod.getText().length() < 2) {
        } else {
            try {
                int op = JOptionPane.showConfirmDialog(null, "Would You Like To Delete Data?");
                if (op == 0) {
                    Product pr = Product.getProductFromName((prod1.getSelectedItem().toString()));
                    Nail_Store ns = Nail_Store.getPurchase(nail_id.getText() + "");
                    if (ns != null) {
                        ns.setQty(Double.parseDouble(prod.getText()));

                        ns.Update_Stock_Out();//update ya nail stock in


                        NailS p = NailS.getProduct(nail_id.getText());

                        p.setProd_id(Integer.parseInt(nail_id.getText()));
                        p.setProdname(prod1.getSelectedItem().toString());
                        p.setRecordingdate(itariki.getDate());
                        p.setQty(Double.parseDouble(prod.getText()));
                        p.setDetails(details.getText());
                        if (p.delete()) {
                            JOptionPane.showMessageDialog(null, "Record Successfully Deleted");
                        } else {
                            JOptionPane.showMessageDialog(null, "Record Not Deleted", "Sorry", JOptionPane.ERROR_MESSAGE);
                        }
                    }




                    jTable1.setModel(new javax.swing.table.DefaultTableModel(
                            NailS.view(),
                            new String[]{
                        "No", "Material", "Quantity", "Date", "Details"
                    }));
                    jTable2.setModel(new javax.swing.table.DefaultTableModel(
                            Nail_Store.view(),
                            new String[]{
                        "No", "Product Name", "Qty"
                    }));
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }        // TODO add your handling code here:
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        jTable1.setAutoCreateRowSorter(true);

        jTable1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                NailS.view(),
                new String[]{
            "No", "Materials", "Quantity", "Date", "Details"
        }));
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jTable1.setAutoCreateRowSorter(true);

        jTable1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                null,
                new String[]{
            "No", "Materials", "Quantity", "Date", "Details"
        }));
    }//GEN-LAST:event_jButton9ActionPerformed

    private void materialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_materialActionPerformed
        Product pr = Product.getProductFromName(material.getSelectedItem().toString());
        Nail_Store ns = Nail_Store.getPurchase_From_Prod_ID(pr.getProd_id() + "");
        jTextField3.setText(ns.getPurchasing_unitprice() + "");

    }//GEN-LAST:event_materialActionPerformed

    private void qtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyTyped
    }//GEN-LAST:event_qtyKeyTyped

    private void qtyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_qtyFocusLost
        try {
            double qt = Double.parseDouble(qty.getText());
            double unit = Double.parseDouble(jTextField3.getText());
            jTextField4.setText((qt * unit) + "");
            amfrw.setText((qt * unit) + "");
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_qtyFocusLost

    private void close_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_close_typeActionPerformed

    private void prod_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prod_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prod_idActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        {
            try {
                int op = JOptionPane.showConfirmDialog(null, "Would You Like To Save Data?");
                if (op == 0) {
                    Product pr = Product.getProductFromName((prod_id.getSelectedItem().toString()));
                    {
                        Calendar cal = new GregorianCalendar();
                        cal.setTime(close_date.getDate());


                        int day, mon = (cal.get(Calendar.MONTH) + 1);
                        String monn = "";
                        day = cal.get(Calendar.DAY_OF_MONTH);
                        String fdate;
                        if (mon < 10) {
                            monn = "0" + mon;
                        } else {
                            monn = mon + "";
                        }
                        if (day < 10) {
                            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

                        } else {
                            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

                        }
                        //JOptionPane.showMessageDialog(null, .toString());
                        System.out.println("fadate.....>>>" + fdate);
                        Closing cl = Closing.getClosing_From_Prod_ID_and_ClosingType(pr.getProd_id() + "", close_type.getSelectedItem().toString(), fdate);
                        if (cl == null) {
                            Closing p = new Closing();
                            p.setProd_id(pr.getProd_id());
                            p.setClose_date(close_date.getDate());
                            p.setClose_type(close_type.getSelectedItem().toString());
                            p.setQty(Double.parseDouble(close_qty.getText()));

                            if (p.insert()) {
                                JOptionPane.showMessageDialog(null, "Data Successfully Saved");
                            } else {
                                JOptionPane.showMessageDialog(null, "Data Not Saved", "Sorry", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Data Already Saved", "Sorry", JOptionPane.WARNING_MESSAGE);

                        }


                    }



                   jTable3.setModel(new javax.swing.table.DefaultTableModel(
    Closing.view(),
    new String [] {
        "No", "Date", "Material","Opening Qty", "Closing Qty"
    }
));
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }        // TODO add your handling code here:
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed

        Calendar cal = new GregorianCalendar();
        cal.setTime(close_date_search.getDate());


        int day, mon = (cal.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal.get(Calendar.DAY_OF_MONTH);
        String fdate;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

        }
        //JOptionPane.showMessageDialog(null, .toString());
        System.out.println("fadate.....>>>" + fdate);

     jTable3.setModel(new javax.swing.table.DefaultTableModel(
    Closing.view_from_date(fdate),
    new String [] {
        "No", "Date", "Material","Opening Qty", "Closing Qty"
    }
));
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed

       jTable3.setModel(new javax.swing.table.DefaultTableModel(
    Closing.view(),
    new String [] {
        "No", "Date", "Material","Opening Qty", "Closing Qty"
    }
));

    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        double tot_nail_made;
        double tot_nail_sold = 0;
        String previous_date, next_date;
        Calendar cal1 = new GregorianCalendar();
        cal1.setTime(jDateChooser2.getDate());
        int day, mon = (cal1.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal1.get(Calendar.DAY_OF_MONTH);

        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            next_date = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + cal1.get(Calendar.DAY_OF_MONTH);

        } else {
            next_date = cal1.get(Calendar.YEAR) + "-" + monn + "-" + cal1.get(Calendar.DAY_OF_MONTH);

        }

        //.......................................................
        if (mon < 10) {
            monn = "0" + mon;
        }
        if (day < 10) {
            previous_date = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + (cal1.get(Calendar.DAY_OF_MONTH) - 1);

        } else {
            previous_date = cal1.get(Calendar.YEAR) + "-" + monn + "-" + (cal1.get(Calendar.DAY_OF_MONTH) - 1);

        }

        //>>>>>>>>>>>>>>>>>>

        System.out.println("Previous Date:" + previous_date);
        System.out.println("Next Date:" + next_date);
        //>>>>>>>>>>>>>>>>>>>>>>

        String rrep = JOptionPane.showInputDialog("Please Enter The Report Name");
        try {
            File fff = new File("C://Business Reports");
            fff.mkdir();
            File fff1 = new File(fff, "Nails Reports");
            fff1.mkdir();
            File ff = new File(fff1.getPath(), rrep + ".pdf");
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream("Report.pdf"));
            FileOutputStream fg = new FileOutputStream(ff);

            PdfWriter.getInstance(document, fg);

            fg.write(10024);
            fg.flush();
            document.open();

            String dd = "";
            Calendar cal = new GregorianCalendar();
            dd = cal.get(Calendar.DAY_OF_MONTH) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" + cal.get(Calendar.YEAR);

            Font font2 = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD | Font.NORMAL);
            //Paragraph par = new Paragraph(new Chunk("Leaves of " +v2.getText() + " ", font2));
            document.add(new Paragraph("AMEGERWA                                                            Done on," + dd, FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));
            document.add(new Paragraph("Nails Business", FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));

            document.add(new Paragraph("___________________________\n\n ", FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));

            document.add(new Paragraph("Nails Sales Transactions Report for: " + next_date + "\n\n\n"));

            PdfPTable table = new PdfPTable(9);
            table.setComplete(true);
            table.setWidthPercentage(100);
            PdfPCell pcell = new PdfPCell(new Paragraph(""));
            table.setHorizontalAlignment(Element.ALIGN_LEFT);
            table.addCell("No");
            table.addCell("Material");
            table.addCell("Sold Qty");
            table.addCell("Tot");
            table.addCell("Received");
            table.addCell("Remain");
            table.addCell("Client");
            table.addCell("Exped.Slip No");
            table.addCell("Deposit Slip");

            document.add(table);
            double tot_sold = 0.0;
            double tot_amount = 0;
            double tot_remained = 0;
            double tot_received = 0;
            List<NailSale> l = NailSale.getList(next_date);
            //List<NailS>ll=NailS.getProductForHardwareList();
            int no = 0;

            for (int i = 0; i < l.size(); i++) {
                PdfPTable tab1 = new PdfPTable(9);
                tab1.setWidthPercentage(100);
                tab1.setComplete(true);
                tab1.setWidthPercentage(100);
                no++;
                Product pr = Product.getProductFromName(l.get(i).getMaterial());

                PdfPCell cell11 = new PdfPCell(new Paragraph(no + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell21 = new PdfPCell(new Paragraph(pr.getProdname(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell31 = new PdfPCell(new Paragraph(l.get(i).getQty() + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
                tot_sold = tot_sold + l.get(i).getQty();
                Nail_Store ns = Nail_Store.getPurchase_From_Prod_ID(pr.getProd_id() + "");
                System.out.println("Store:" + ns);
                double tot = ns.getPurchasing_unitprice() * l.get(i).getQty();
                tot_amount = tot_amount + tot;
                PdfPCell cell41 = new PdfPCell(new Paragraph(tot + "Frw", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell51 = new PdfPCell(new Paragraph(l.get(i).getAmount() + "Frw", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
                tot_received = tot_received + l.get(i).getAmount();
                double rem = (l.get(i).getQty() * ns.getPurchasing_unitprice()) - l.get(i).getAmount();
                tot_remained = tot_remained + rem;
                String remm = "";
                if (rem < 0) {
                    remm = "+" + rem * -1 + " Rfw";
                } else {
                    remm = "(-" + rem + ") Rfw";
                }
                PdfPCell cell61 = new PdfPCell(new Paragraph(remm + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell511 = new PdfPCell(new Paragraph(l.get(i).getClient() + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell5111 = new PdfPCell(new Paragraph(l.get(i).getSlip1() + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell51111 = new PdfPCell(new Paragraph(l.get(i).getSlip2() + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));

                tab1.addCell(cell11);
                tab1.addCell(cell21);
                tab1.addCell(cell31);
                tab1.addCell(cell41);
                tab1.addCell(cell51);
                tab1.addCell(cell61);
                tab1.addCell(cell511);
                tab1.addCell(cell5111);
                tab1.addCell(cell51111);
                tab1.setHorizontalAlignment(Element.ALIGN_LEFT);
                document.add(tab1);
            }
            PdfPTable tab1 = new PdfPTable(9);
            tab1.setWidthPercentage(100);
            tab1.setComplete(true);
            tab1.setWidthPercentage(100);


            PdfPCell cell11 = new PdfPCell(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
            PdfPCell cell21 = new PdfPCell(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
            PdfPCell cell31 = new PdfPCell(new Paragraph(tot_sold + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));



            PdfPCell cell41 = new PdfPCell(new Paragraph(tot_amount + "Frw", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
            PdfPCell cell51 = new PdfPCell(new Paragraph(tot_received + "Frw", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
            String gg = "";
            if (tot_remained < 0) {
                gg = "+" + (-1) * tot_remained;
            } else {
                gg = "(-" + (-1) * tot_remained + ")";

            }
            PdfPCell cell61 = new PdfPCell(new Paragraph(gg + "Frw", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
            PdfPCell cell511 = new PdfPCell(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
            PdfPCell cell5111 = new PdfPCell(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
            PdfPCell cell51111 = new PdfPCell(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));

            tab1.addCell(cell11);
            tab1.addCell(cell21);
            tab1.addCell(cell31);
            tab1.addCell(cell41);
            tab1.addCell(cell51);
            tab1.addCell(cell61);
            tab1.addCell(cell511);
            tab1.addCell(cell5111);
            tab1.addCell(cell51111);
            tab1.setHorizontalAlignment(Element.ALIGN_LEFT);
            document.add(tab1);
            document.add(new Paragraph("Prepared by...........................\n"));
            document.add(new Paragraph("Signature\n\n_____________________________"));
            document.close();
//            
            JOptionPane.showMessageDialog(null, "Report Saved on:" + ff.getPath());
        } catch (Exception ex) {

            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        double tot_nail_made;
        double tot_nail_sold = 0;
        String previous_date, next_date;
        Calendar cal1 = new GregorianCalendar();
        cal1.setTime(jDateChooser3.getDate());
        int day, mon = (cal1.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal1.get(Calendar.DAY_OF_MONTH);

        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            next_date = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + cal1.get(Calendar.DAY_OF_MONTH);

        } else {
            next_date = cal1.get(Calendar.YEAR) + "-" + monn + "-" + cal1.get(Calendar.DAY_OF_MONTH);

        }

        //.......................................................
        if (mon < 10) {
            monn = "0" + mon;
        }
        if (day < 10) {
            previous_date = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + (cal1.get(Calendar.DAY_OF_MONTH) - 1);

        } else {
            previous_date = cal1.get(Calendar.YEAR) + "-" + monn + "-" + (cal1.get(Calendar.DAY_OF_MONTH) - 1);

        }

        //>>>>>>>>>>>>>>>>>>

        System.out.println("Previous Date:" + previous_date);
        System.out.println("Next Date:" + next_date);
        //>>>>>>>>>>>>>>>>>>>>>>

        String rrep = JOptionPane.showInputDialog("Please Enter The Report Name");
        try {
            File fff = new File("C://Business Reports");
            fff.mkdir();
            File fff1 = new File(fff, "Nails Reports");
            fff1.mkdir();
            File ff = new File(fff1.getPath(), rrep + ".pdf");
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream("Report.pdf"));
            FileOutputStream fg = new FileOutputStream(ff);

            PdfWriter.getInstance(document, fg);

            fg.write(10024);
            fg.flush();
            document.open();

            String dd = "";
            Calendar cal = new GregorianCalendar();
            dd = cal.get(Calendar.DAY_OF_MONTH) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" + cal.get(Calendar.YEAR);

            Font font2 = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD | Font.NORMAL);
            //Paragraph par = new Paragraph(new Chunk("Leaves of " +v2.getText() + " ", font2));
            document.add(new Paragraph("AMEGERWA                                                            Done on," + dd, FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));
            document.add(new Paragraph("Nails Business", FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));

            document.add(new Paragraph("___________________________\n\n ", FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));

            document.add(new Paragraph("Nails Made Transactions Report for: " + next_date + "\n\n\n"));

            PdfPTable table = new PdfPTable(4);
            table.setComplete(true);
            table.setWidthPercentage(100);
            PdfPCell pcell = new PdfPCell(new Paragraph(""));
            table.setHorizontalAlignment(Element.ALIGN_LEFT);
            table.addCell("No");
            table.addCell("Material");
            table.addCell("Qty Made");
            table.addCell("Details");


            document.add(table);
            double tot_sold = 0.0;
            double tot_amount = 0;
            double tot_remained = 0;
            double tot_received = 0;
            List<NailS> l = NailS.getList(next_date);
            //List<NailS>ll=NailS.getProductForHardwareList();
            int no = 0;

            for (int i = 0; i < l.size(); i++) {
                PdfPTable tab1 = new PdfPTable(4);
                tab1.setWidthPercentage(100);
                tab1.setComplete(true);
                tab1.setWidthPercentage(100);
                no++;
                Product pr = Product.getProductFromName(l.get(i).getProdname());

                PdfPCell cell11 = new PdfPCell(new Paragraph(no + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell21 = new PdfPCell(new Paragraph(pr.getProdname(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell31 = new PdfPCell(new Paragraph(l.get(i).getQty() + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
                tot_sold = tot_sold + l.get(i).getQty();


                PdfPCell cell41 = new PdfPCell(new Paragraph(l.get(i).getDetails() + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));

                tab1.addCell(cell11);
                tab1.addCell(cell21);
                tab1.addCell(cell31);
                tab1.addCell(cell41);

                tab1.setHorizontalAlignment(Element.ALIGN_LEFT);
                document.add(tab1);
            }
            PdfPTable tab1 = new PdfPTable(4);
            tab1.setWidthPercentage(100);
            tab1.setComplete(true);
            tab1.setWidthPercentage(100);


            PdfPCell cell11 = new PdfPCell(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
            PdfPCell cell21 = new PdfPCell(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
            PdfPCell cell31 = new PdfPCell(new Paragraph(tot_sold + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));



            PdfPCell cell41 = new PdfPCell(new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));

            tab1.addCell(cell11);
            tab1.addCell(cell21);
            tab1.addCell(cell31);
            tab1.addCell(cell41);

            tab1.setHorizontalAlignment(Element.ALIGN_LEFT);
            document.add(tab1);
            document.add(new Paragraph("Prepared by...........................\n"));
            document.add(new Paragraph("Signature\n\n_____________________________"));
            document.close();
//            
            JOptionPane.showMessageDialog(null, "Report Saved on:" + ff.getPath());
        } catch (Exception ex) {

            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        double tot_nail_made;
        double tot_nail_sold = 0;
        String previous_date, next_date;
        Calendar cal1 = new GregorianCalendar();
        cal1.setTime(jDateChooser4.getDate());
        int day, mon = (cal1.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal1.get(Calendar.DAY_OF_MONTH);

        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            next_date = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + cal1.get(Calendar.DAY_OF_MONTH);

        } else {
            next_date = cal1.get(Calendar.YEAR) + "-" + monn + "-" + cal1.get(Calendar.DAY_OF_MONTH);

        }

        //.......................................................
        if (mon < 10) {
            monn = "0" + mon;
        }
        if (day < 10) {
            previous_date = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + (cal1.get(Calendar.DAY_OF_MONTH) - 1);

        } else {
            previous_date = cal1.get(Calendar.YEAR) + "-" + monn + "-" + (cal1.get(Calendar.DAY_OF_MONTH) - 1);

        }

        //>>>>>>>>>>>>>>>>>>

        System.out.println("Previous Date:" + previous_date);
        System.out.println("Next Date:" + next_date);
        //>>>>>>>>>>>>>>>>>>>>>>

        String rrep = JOptionPane.showInputDialog("Please Enter The Report Name");
        try {
            File fff = new File("C://Business Reports");
            fff.mkdir();
            File fff1 = new File(fff, "Nails Reports");
            fff1.mkdir();
            File ff = new File(fff1.getPath(), rrep + ".pdf");
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream("Report.pdf"));
            FileOutputStream fg = new FileOutputStream(ff);

            PdfWriter.getInstance(document, fg);

            fg.write(10024);
            fg.flush();
            document.open();

            String dd = "";
            Calendar cal = new GregorianCalendar();
            dd = cal.get(Calendar.DAY_OF_MONTH) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" + cal.get(Calendar.YEAR);

            Font font2 = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD | Font.NORMAL);
            //Paragraph par = new Paragraph(new Chunk("Leaves of " +v2.getText() + " ", font2));
            document.add(new Paragraph("AMEGERWA                                                            Done on," + dd, FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));
            document.add(new Paragraph("Nails Business", FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));

            document.add(new Paragraph("___________________________\n\n ", FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));

            document.add(new Paragraph("Nails Transactions Summary Report for: " + next_date + "\n\n\n"));

            PdfPTable table = new PdfPTable(5);
            table.setComplete(true);
            table.setWidthPercentage(100);
            PdfPCell pcell = new PdfPCell(new Paragraph(""));
            table.setHorizontalAlignment(Element.ALIGN_LEFT);
            table.addCell("No");
            table.addCell("Material");
            table.addCell("Operation Type");
            table.addCell("Qty");
            table.addCell("Time");

            document.add(table);
            double tot_sold = 0.0;
            double tot_amount = 0;
            double tot_remained = 0;
            double tot_received = 0;
            List<Closing> l = Closing.getList_From_Date(next_date);
            //List<NailS>ll=NailS.getProductForHardwareList();
            int no = 0;

            for (int i = 0; i < l.size(); i++) {
                PdfPTable tab1 = new PdfPTable(5);
                tab1.setWidthPercentage(100);
                tab1.setComplete(true);
                tab1.setWidthPercentage(100);
                no++;
                Product pr = Product.getProduct(l.get(i).getProd_id() + "");

                PdfPCell cell11 = new PdfPCell(new Paragraph(no + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell21 = new PdfPCell(new Paragraph(pr.getProdname(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell31 = new PdfPCell(new Paragraph(l.get(i).getClose_type() + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));

                PdfPCell cell311 = new PdfPCell(new Paragraph(l.get(i).getQty() + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));

                PdfPCell cell41 = new PdfPCell(new Paragraph(l.get(i).getClose_time() + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));

                tab1.addCell(cell11);
                tab1.addCell(cell21);
                tab1.addCell(cell31);
                tab1.addCell(cell311);
                tab1.addCell(cell41);

                tab1.setHorizontalAlignment(Element.ALIGN_LEFT);
                document.add(tab1);
            }

            document.add(new Paragraph("Prepared by...........................\n"));
            document.add(new Paragraph("Signature\n\n_____________________________"));
            document.close();
//            
            JOptionPane.showMessageDialog(null, "Report Saved on:" + ff.getPath());
        } catch (Exception ex) {

            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Calendar cal = new GregorianCalendar();
        cal.setTime(search_date.getDate());
        int day, mon = (cal.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal.get(Calendar.DAY_OF_MONTH);
        String fdate;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

        }
        //JOptionPane.showMessageDialog(null, .toString());
        System.out.println("fadate.....>>>" + fdate);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                NailS.view(fdate),
                new String[]{
            "No", "Materials", "Quantity", "Date", "Details"
        }));

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed

        int op = JOptionPane.showConfirmDialog(null, "Would you like to Update data?", "Notice", JOptionPane.WARNING_MESSAGE);
        if (op == 0) {


            try {

                Product pr = Product.getProductFromName(material.getSelectedItem().toString());
                Nail_Store ns = Nail_Store.getPurchase_From_Prod_ID(pr.getProd_id() + "");
                if (ns != null) {
                    {
                        double qty_before_update = 0;
                        double qty_for_update = 0;

                        NailSale p = new NailSale();
                        //Product pr = Product.getProductFromName(prodlist.getSelectedItem().toString());
                        //p.setpr.getProd_id());
                        p.setSale_id(Integer.parseInt(sale_id.getText()));
                        p.setMaterial(material.getSelectedItem().toString());
                        p.setEmp("");
                        p.setClient(client.getText());
                        p.setQty(Double.parseDouble(qty.getText()));
                        p.setAmount(Double.parseDouble(amfrw.getText()));
                        //p.setPurchasing_unitprice(Double.parseDouble(purchasingunitprice.getText()));
                        p.setRecording_date(saledate.getDate());
                        p.setDetails(description2.getText());
                        p.setSlip1(slip1.getText());
                        p.setSlip2(slip2.getText());
                        if (p.upate()) {


                            //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                            ns.setQty(p.getQty());
                            qty_before_update = Double.parseDouble(qty_update_nail_sales.getText());

                            if (qty_before_update > p.getQty()) {
                                ns.setQty(qty_before_update - p.getQty());
                                System.out.println(ns.Update_Stock_Out());
                            } else {
                                ns.setQty(p.getQty() - qty_before_update);
                                System.out.println(ns.Update_Stock_IN());

                            }


                            JOptionPane.showMessageDialog(null, "Successfully Updated");
                            //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                        } else {
                            JOptionPane.showMessageDialog(null, "Not Updated", "Sorry", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "The Product Is not found in the nails store...Retry", "Sorry", JOptionPane.WARNING_MESSAGE);

                }





                jTable7.setModel(new javax.swing.table.DefaultTableModel(
                        NailSale.view(),
                        new String[]{
                    "No","Material","Qty","Tot Amount","Received Amount","Remaining Amount","Date","Details","Exped.Slip No","Deposit Slip no","Client"
      }));
                jTable2.setModel(new javax.swing.table.DefaultTableModel(
                        Nail_Store.view(),
                        new String[]{
                    "No", "Product Name", "Qty"
                }));
            } catch (Exception ex) {
            }
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jTable7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable7MouseClicked
        try {
            int no = jTable7.getSelectedRow();
            sale_id.setText(jTable7.getValueAt(no, 0) + "");
            material.setEditable(true);
            material.setSelectedItem(jTable7.getValueAt(no, 1) + "");
            material.setEditable(false);
            String p[] = (jTable7.getValueAt(no, 2) + "").split(" ");
            qty.setText(p[0]);
            qty_update_nail_sales.setText(p[0]);
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date dd = sdf.parse(jTable7.getValueAt(no, 6) + "");
            saledate.setDate(dd);
            jTextField4.setText((Double.parseDouble(p[0]) * Double.parseDouble(jTextField3.getText())) + "");
            String pp[] = (jTable7.getValueAt(no, 4) + "").split(" ");
            amfrw.setText(pp[0]);
            client.setText(jTable7.getValueAt(no, 10) + "");
            slip1.setText(jTable7.getValueAt(no, 8) + "");
            slip2.setText(jTable7.getValueAt(no, 9) + "");
            details.setText(jTable7.getValueAt(no, 7) + "");
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jTable7MouseClicked

    private void qtyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_qtyFocusGained
    }//GEN-LAST:event_qtyFocusGained

    private void qtyPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_qtyPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyPropertyChange

    private void qtyInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_qtyInputMethodTextChanged
        try {
            double qt = Double.parseDouble(qty.getText());
            double unit = Double.parseDouble(jTextField3.getText());
            jTextField4.setText((qt * unit) + "");
            amfrw.setText((qt * unit) + "");
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_qtyInputMethodTextChanged

    private void jTextField3InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField3InputMethodTextChanged
        try {
            double qt = Double.parseDouble(qty.getText());
            double unit = Double.parseDouble(jTextField3.getText());
            jTextField4.setText((qt * unit) + "");
            amfrw.setText((qt * unit) + "");
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jTextField3InputMethodTextChanged

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed

        int op = JOptionPane.showConfirmDialog(null, "Would you like to Delete data?", "Notice", JOptionPane.ERROR_MESSAGE);

        if (op == 0) {


            try {

                Product pr = Product.getProductFromName(material.getSelectedItem().toString());
                Nail_Store ns = Nail_Store.getPurchase_From_Prod_ID(pr.getProd_id() + "");
                if (ns != null) {
                    {
                        double qty_before_update = 0;
                        double qty_for_update = 0;

                        NailSale p = new NailSale();
                        //Product pr = Product.getProductFromName(prodlist.getSelectedItem().toString());
                        //p.setpr.getProd_id());
                        p.setSale_id(Integer.parseInt(sale_id.getText()));
                        p.setMaterial(material.getSelectedItem().toString());
                        p.setEmp("");
                        p.setClient(client.getText());
                        p.setQty(Double.parseDouble(qty.getText()));
                        p.setAmount(Double.parseDouble(amfrw.getText()));
                        //p.setPurchasing_unitprice(Double.parseDouble(purchasingunitprice.getText()));
                        p.setRecording_date(saledate.getDate());
                        p.setDetails(description2.getText());
                        p.setSlip1(slip1.getText());
                        p.setSlip2(slip2.getText());
                        if (p.delete()) {


                            //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//                        ns.setQty(p.getQty());
//                        qty_before_update=Double.parseDouble(qty_update_nail_sales.getText());
//                        
//                        if(qty_before_update>p.getQty()){
//                        ns.setQty(qty_before_update-p.getQty());
//                        System.out.println(ns.Update_Stock_Out());
//                        }else{
//                         ns.setQty(p.getQty()-qty_before_update);
//                        System.out.println(ns.Update_Stock_IN());
//                        
//                        }


                            JOptionPane.showMessageDialog(null, "Successfully Deleted");
                            //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                        } else {
                            JOptionPane.showMessageDialog(null, "Not Deleted", "Sorry", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    NailSale p = new NailSale();

                    p.setSale_id(Integer.parseInt(sale_id.getText()));

                    if (p.delete()) {
                        JOptionPane.showMessageDialog(null, "Successfully Deleted");
                    } else {
                        JOptionPane.showMessageDialog(null, "Not Deleted", "Sorry", JOptionPane.ERROR_MESSAGE);

                    }
                }





                jTable7.setModel(new javax.swing.table.DefaultTableModel(
                        NailSale.view(),
                        new String[]{
                     "No","Material","Qty","Tot Amount","Received Amount","Remaining Amount","Date","Details","Exped.Slip No","Deposit Slip no","Client"
      }));
                jTable2.setModel(new javax.swing.table.DefaultTableModel(
                        Nail_Store.view(),
                        new String[]{
                    "No", "Product Name", "Qty"
                }));
            } catch (Exception ex) {
            }
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed

        Calendar cal = new GregorianCalendar();
        cal.setTime(search_date_sale.getDate());
        int day, mon = (cal.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal.get(Calendar.DAY_OF_MONTH);
        String fdate;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

        }
        //JOptionPane.showMessageDialog(null, .toString());
        System.out.println("fadate.....>>>" + fdate);

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
                NailSale.view_search_by_date(fdate),
                new String[]{
            "No", "Material", "Qty", "Tot Amount", "Received Amount", "Remaining Amount", "Date", "Details", "Slip I", "Slip IIs", "Client"
        }));

    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        try {
            int op = JOptionPane.showConfirmDialog(null, "Would You Like To Update Data?");
            if (op == 0) {
                Expense p = new Expense();
                //Product pr = Product.getProductFromName(prodlist.getSelectedItem().toString());
                //p.setpr.getProd_id());
                p.setExpense_id(Integer.parseInt(expense_id.getText()));
                p.setDescription(description1.getText());
                p.setBusiness(business.getSelectedItem().toString());
                p.setAmount(Double.parseDouble(examount.getText()));
                //p.setPurchasing_unitprice(Double.parseDouble(purchasingunitprice.getText()));
                p.setRecording_date(purchasingdate1.getDate());
                if (p.update()) {
                    JOptionPane.showMessageDialog(null, "Successfully Recorded");
                } else {
                    JOptionPane.showMessageDialog(null, "Not Recorded", "Sorry", JOptionPane.ERROR_MESSAGE);
                }

                jTable5.setModel(new javax.swing.table.DefaultTableModel(
                        Expense.viewExpenseNail(),
                        new String[]{
                    "No", "Business", "Description", "Amount", "Date"
                }));
            }
        } catch (Exception ex) {
        }




    }//GEN-LAST:event_jButton24ActionPerformed

    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked
        try {
            int no = jTable5.getSelectedRow();
            expense_id.setText(jTable5.getValueAt(no, 0) + "");
            description1.setText(jTable5.getValueAt(no, 2) + "");
            examount.setText(jTable5.getValueAt(no, 3) + "");
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date dd = sdf.parse(jTable5.getValueAt(no, 4) + "");
            purchasingdate1.setDate(dd);

        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jTable5MouseClicked

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        try {
            int op = JOptionPane.showConfirmDialog(null, "Would You Like To Delete Data?");
            if (op == 0) {
                Expense p = new Expense();
                //Product pr = Product.getProductFromName(prodlist.getSelectedItem().toString());
                //p.setpr.getProd_id());
                p.setExpense_id(Integer.parseInt(expense_id.getText()));
                p.setDescription(description1.getText());
                p.setBusiness(business.getSelectedItem().toString());
                p.setAmount(Double.parseDouble(examount.getText()));
                //p.setPurchasing_unitprice(Double.parseDouble(purchasingunitprice.getText()));
                p.setRecording_date(purchasingdate1.getDate());
                if (p.delete()) {
                    JOptionPane.showMessageDialog(null, "Successfully Deleted");
                } else {
                    JOptionPane.showMessageDialog(null, "Not Deleted", "Sorry", JOptionPane.ERROR_MESSAGE);
                }

                jTable5.setModel(new javax.swing.table.DefaultTableModel(
                        Expense.viewExpenseNail(),
                        new String[]{
                    "No", "Business", "Description", "Amount", "Date"
                }));
            }
        } catch (Exception ex) {
        }




    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed


        Calendar cal = new GregorianCalendar();
        cal.setTime(search_date_expense.getDate());
        int day, mon = (cal.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal.get(Calendar.DAY_OF_MONTH);
        String fdate;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

        }
        //JOptionPane.showMessageDialog(null, .toString());
        System.out.println("fadate.....>>>" + fdate);
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
                Expense.viewExpenseNail_Search_by_date(fdate),
                new String[]{
            "No", "Business", "Description", "Amount", "Date"
        }));

    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
                Expense.viewExpenseNail(),
                new String[]{
            "No", "Business", "Description", "Amount", "Date"
        }));
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        {
            try {
                int op = JOptionPane.showConfirmDialog(null, "Would You Like To Update Data?");
                if (op == 0) {
                    Product pr = Product.getProductFromName((prod_id.getSelectedItem().toString()));
                    {
                        Calendar cal = new GregorianCalendar();
                        cal.setTime(close_date.getDate());


                        int day, mon = (cal.get(Calendar.MONTH) + 1);
                        String monn = "";
                        day = cal.get(Calendar.DAY_OF_MONTH);
                        String fdate;
                        if (mon < 10) {
                            monn = "0" + mon;
                        } else {
                            monn = mon + "";
                        }
                        if (day < 10) {
                            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

                        } else {
                            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

                        }
                        //JOptionPane.showMessageDialog(null, .toString());
                        System.out.println("fadate.....>>>" + fdate);
                        Closing cl = Closing.getClosing_From_ID(closing_id.getText());
                        {
                            Closing p = new Closing();
                            p.setId(Integer.parseInt(closing_id.getText()));
                            p.setProd_id(pr.getProd_id());
                            p.setClose_date(close_date.getDate());
                            p.setClose_type(close_type.getSelectedItem().toString());
                            p.setQty(Double.parseDouble(close_qty.getText()));

                            if (p.update()) {
                                JOptionPane.showMessageDialog(null, "Data Successfully Updated");
                            } else {
                                JOptionPane.showMessageDialog(null, "Data Not Updated", "Sorry", JOptionPane.ERROR_MESSAGE);
                            }
                        }


                    }



                    jTable3.setModel(new javax.swing.table.DefaultTableModel(
    Closing.view(),
    new String [] {
        "No", "Date", "Material","Opening Qty", "Closing Qty"
    }
));

                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }        // TODO add your handling code here:
        }
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
         {
            try {
                int op = JOptionPane.showConfirmDialog(null, "Would You Like To Update Data?");
                if (op == 0) {
                    Product pr = Product.getProductFromName((prod_id.getSelectedItem().toString()));
                    {
                        Calendar cal = new GregorianCalendar();
                        cal.setTime(close_date.getDate());


                        int day, mon = (cal.get(Calendar.MONTH) + 1);
                        String monn = "";
                        day = cal.get(Calendar.DAY_OF_MONTH);
                        String fdate;
                        if (mon < 10) {
                            monn = "0" + mon;
                        } else {
                            monn = mon + "";
                        }
                        if (day < 10) {
                            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

                        } else {
                            fdate = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

                        }
                        //JOptionPane.showMessageDialog(null, .toString());
                        System.out.println("fadate.....>>>" + fdate);
                        Closing cl = Closing.getClosing_From_ID(closing_id.getText());
                        {
                            Closing p = new Closing();
                            p.setId(Integer.parseInt(closing_id.getText()));
                            p.setProd_id(pr.getProd_id());
                            p.setClose_date(close_date.getDate());
                            p.setClose_type(close_type.getSelectedItem().toString());
                            p.setQty(Double.parseDouble(close_qty.getText()));

                            if (p.delete()) {
                                JOptionPane.showMessageDialog(null, "Data Successfully Deleted");
                            } else {
                                JOptionPane.showMessageDialog(null, "Data Not Deleted", "Sorry", JOptionPane.ERROR_MESSAGE);
                            }
                        }


                    }



                    jTable3.setModel(new javax.swing.table.DefaultTableModel(
    Closing.view(),
    new String [] {
        "No", "Date", "Material","Opening Qty", "Closing Qty"
    }
));

                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }        // TODO add your handling code here:
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        try{
        int no=jTable3.getSelectedRow();
        closing_id.setText(jTable3.getValueAt(no, 0)+"");
         close_qty.setText(jTable3.getValueAt(no,4)+"");
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            close_date.setDate(sdf.parse(jTable3.getValueAt(no, 1) + ""));
            prod_id.setEditable(true);
            
            prod_id.setSelectedItem(jTable3.getValueAt(no, 2) + "");
            prod_id.setEditable(false);
            close_type.setEditable(true);
            
            close_type.setSelectedItem(jTable3.getValueAt(no, 3) + "");
            close_type.setEditable(false);
        }catch(Exception ex){}
    }//GEN-LAST:event_jTable3MouseClicked

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
          Calendar cal1 = new GregorianCalendar();
        cal1.setTime(date1.getDate());


        int day, mon = (cal1.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal1.get(Calendar.DAY_OF_MONTH);
        String fdate;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + cal1.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate = cal1.get(Calendar.YEAR) + "-" + monn + "-" + cal1.get(Calendar.DAY_OF_MONTH);

        }
        //...........................................
        
        
          Calendar cal = new GregorianCalendar();
        cal.setTime(date2.getDate());


        mon = (cal.get(Calendar.MONTH) + 1);
         monn = "";
        day = cal.get(Calendar.DAY_OF_MONTH);
        String fdate1;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate1 = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate1 = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

        }
        //JOptionPane.showMessageDialog(null, .toString());
        System.out.println("Date From.....>>>" + fdate);
        System.out.println("Date To.......>>>" + fdate1);
        
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
    Closing.view_from_date1_date2(fdate, fdate1),
    new String [] {
        "No", "Date", "Material","Opening Qty", "Closing Qty"
    }
));

        
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
                  Calendar cal1 = new GregorianCalendar();
        cal1.setTime(from.getDate());


        int day, mon = (cal1.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal1.get(Calendar.DAY_OF_MONTH);
        String fdate;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + cal1.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate = cal1.get(Calendar.YEAR) + "-" + monn + "-" + cal1.get(Calendar.DAY_OF_MONTH);

        }
        //...........................................
        
        
          Calendar cal = new GregorianCalendar();
        cal.setTime(to.getDate());


        mon = (cal.get(Calendar.MONTH) + 1);
         monn = "";
        day = cal.get(Calendar.DAY_OF_MONTH);
        String fdate1;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate1 = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate1 = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

        }
        //JOptionPane.showMessageDialog(null, .toString());
        System.out.println("Date From.....>>>" + fdate);
        System.out.println("Date To.......>>>" + fdate1);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
    NailS.view_date1_date2(fdate, fdate1) ,
    new String [] {
        "No", "Materials","Quantity","Date","Details"
    }
));
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
       jTable7.setModel(new javax.swing.table.DefaultTableModel(
    NailSale.view() ,
    new String [] {
        "No","Material","Qty","Tot Amount","Received Amount","Remaining Amount","Date","Details","Exped.Slip No","Deposit Slip no","Client"
    }
));
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
       Calendar cal1 = new GregorianCalendar();
        cal1.setTime(date11.getDate());


        int day, mon = (cal1.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal1.get(Calendar.DAY_OF_MONTH);
        String fdate;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + cal1.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate = cal1.get(Calendar.YEAR) + "-" + monn + "-" + cal1.get(Calendar.DAY_OF_MONTH);

        }
        //...........................................
        
        
          Calendar cal = new GregorianCalendar();
        cal.setTime(date22.getDate());


        mon = (cal.get(Calendar.MONTH) + 1);
         monn = "";
        day = cal.get(Calendar.DAY_OF_MONTH);
        String fdate1;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate1 = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate1 = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

        }
        //JOptionPane.showMessageDialog(null, .toString());
        System.out.println("Date From.....>>>" + fdate);
        System.out.println("Date To.......>>>" + fdate1);
        
          jTable7.setModel(new javax.swing.table.DefaultTableModel(
                NailSale.view_search_by_date1_date2(fdate, fdate1),
                new String[]{
            "No", "Material", "Qty", "Tot Amount", "Received Amount", "Remaining Amount", "Date", "Details", "Slip I", "Slip IIs", "Client"
        }));
        
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        Calendar cal1 = new GregorianCalendar();
        cal1.setTime(date111.getDate());


        int day, mon = (cal1.get(Calendar.MONTH) + 1);
        String monn = "";
        day = cal1.get(Calendar.DAY_OF_MONTH);
        String fdate;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + cal1.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate = cal1.get(Calendar.YEAR) + "-" + monn + "-" + cal1.get(Calendar.DAY_OF_MONTH);

        }
        //...........................................
        
        
          Calendar cal = new GregorianCalendar();
        cal.setTime(date222.getDate());


        mon = (cal.get(Calendar.MONTH) + 1);
         monn = "";
        day = cal.get(Calendar.DAY_OF_MONTH);
        String fdate1;
        if (mon < 10) {
            monn = "0" + mon;
        } else {
            monn = mon + "";
        }
        if (day < 10) {
            fdate1 = cal.get(Calendar.YEAR) + "-" + monn + "-0" + cal.get(Calendar.DAY_OF_MONTH);

        } else {
            fdate1 = cal.get(Calendar.YEAR) + "-" + monn + "-" + cal.get(Calendar.DAY_OF_MONTH);

        }
        //JOptionPane.showMessageDialog(null, .toString());
        System.out.println("Date From.....>>>" + fdate);
        System.out.println("Date To.......>>>" + fdate1);
        
       jTable5.setModel(new javax.swing.table.DefaultTableModel(
                Expense.viewExpenseNail_Search_by_date1_date2(fdate,fdate1),
                new String[]{
            "No", "Business", "Description", "Amount", "Date"
        }));
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
                 try {
            Calendar cal1 = new GregorianCalendar();
            cal1.setTime(jDateChooser1.getDate());
            int day, mon = (cal1.get(Calendar.MONTH) + 1);
            String monn = "";
            day = cal1.get(Calendar.DAY_OF_MONTH);
            String fdate, fdate1;
            if (mon < 10) {
                monn = "0" + mon;
            } else {
                monn = mon + "";
            }
            if (day < 10) {
                fdate = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + cal1.get(Calendar.DAY_OF_MONTH);

            } else {
                fdate = cal1.get(Calendar.YEAR) + "-" + monn + "-" + cal1.get(Calendar.DAY_OF_MONTH);

            }

            //.......................................................
            if (mon < 10) {
                monn = "0" + mon;
            }
            if (day < 10) {
                fdate1 = cal1.get(Calendar.YEAR) + "-" + monn + "-0" + (cal1.get(Calendar.DAY_OF_MONTH) - 1);

            } else {
                fdate1 = cal1.get(Calendar.YEAR) + "-" + monn + "-" + (cal1.get(Calendar.DAY_OF_MONTH) - 1);

            }

            {

                String rrep = JOptionPane.showInputDialog("Please Enter The Report Name");
                try {
                    File fff = new File("C://Business Reports");
                    fff.mkdir();
                    File ff = new File(fff.getPath(), rrep + ".pdf");
                    Document document = new Document();
                    PdfWriter.getInstance(document, new FileOutputStream("Report.pdf"));
                    FileOutputStream fg = new FileOutputStream(ff);

                    PdfWriter.getInstance(document, fg);

                    fg.write(10024);
                    fg.flush();
                    document.open();
                  
                    String dd = "";
                    Calendar cal = new GregorianCalendar();
                    dd = cal.get(Calendar.DAY_OF_MONTH) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" + cal.get(Calendar.YEAR);

                    Font font2 = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD | Font.NORMAL);
                    //Paragraph par = new Paragraph(new Chunk("Leaves of " +v2.getText() + " ", font2));
                    document.add(new Paragraph("AMEGERWA                                     Done on," + dd, FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));
                    document.add(new Paragraph("Nails Business", FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));

                    document.add(new Paragraph("___________________________\n\n ", FontFactory.getFont(FontFactory.TIMES_BOLD, 13, Font.BOLD, BaseColor.BLACK)));
                    //
                    String id = "", names = "";
                    document.add(new Paragraph("                                      Nails Opening and Closing Report \n"));
                    //document.add(new Paragraph("Names : "+v2.getText()+"\n"));

                    //par.setAlignment(Element.ALIGN_CENTER);
                    //document.add(par);
                    document.add(new Paragraph("\n"));
                    PdfPTable table = new PdfPTable(5);
                    table.setWidthPercentage(100);
                    PdfPCell pcell = new PdfPCell(new Paragraph(""));
                    table.setHorizontalAlignment(Element.ALIGN_LEFT);
                    //pcell.setColspan(4);
                    //pcell.setHorizontalAlignment(Element.ALIGN_CENTER);
                    //pcell.setBackgroundColor(BaseColor.GREEN);
                    //table.addCell(pcell);
                    table.addCell("Date");
                    table.addCell("No");
                    table.addCell("Nail Type");
                    table.addCell("Opening Qty");
                    table.addCell("Closing Qty");
                   
                    document.add(table);
                    List<Closing> l = Closing.getList_From_Date(fdate);
                  
                    int no = 0;
                    
                   
                    for (int i = 0; i < l.size(); i++) {

                     {
                            PdfPTable tab = new PdfPTable(5);
                            no++;
                            tab.setTotalWidth(1001);
                            tab.setWidthPercentage(100);
                            //no++;
                            PdfPCell cell1 = new PdfPCell(new Paragraph(fdate + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
                            PdfPCell cell2 = new PdfPCell(new Paragraph(no + " ", FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
                            PdfPCell cell3 = new PdfPCell(new Paragraph(Product.getProduct(l.get(i).getProd_id()+"").getProdname(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK)));
                            Closing cl=Closing.getClosing_From_Prod_ID_and_ClosingType(l.get(i).getProd_id()+"","opening", fdate);
                            String temp1="";
                            if(cl!=null){
                            temp1=cl.getQty()+"";
                            }else{
                            temp1="Not Found";
                            }
                            PdfPCell cell4 = new PdfPCell(new Paragraph(temp1, FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
                            String temp2="";
                             Closing cll=Closing.getClosing_From_Prod_ID_and_ClosingType(l.get(i).getProd_id()+"","closing", fdate);
                             if(cll!=null){
                            temp2=cll.getQty()+"";
                            }else{
                             temp2="Not Found";
                            }
                            PdfPCell cell5 = new PdfPCell(new Paragraph(temp2 + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK)));
                            
                            tab.addCell(cell1);
                            tab.addCell(cell2);
                            tab.addCell(cell3);
                            tab.addCell(cell4);
                            tab.addCell(cell5);
                         
                            tab.setHorizontalAlignment(Element.ALIGN_LEFT);
                            document.add(tab);
                        }
                    }
                    

                    document.add(new Paragraph("Prepared by...........................\n"));
                    document.add(new Paragraph("Signature\n\n_____________________________"));
                    document.close();
                    JOptionPane.showMessageDialog(null, "Report saved!");
                } catch (Exception e) {
                    e.printStackTrace();
                    //JOptionPane.showMessageDialog(null, e);
                }        // TODO add your handling code here:

            }



        } catch (Exception ex) {
            ex.printStackTrace();
        } 
    }//GEN-LAST:event_jButton35ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Nail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Nail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Nail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Nail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Nail().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amfrw;
    private com.toedter.calendar.demo.BirthdayEvaluator birthdayEvaluator1;
    private javax.swing.JComboBox business;
    private javax.swing.JTextField client;
    private com.toedter.calendar.JDateChooser close_date;
    private com.toedter.calendar.JDateChooser close_date_search;
    private javax.swing.JTextField close_qty;
    private javax.swing.JComboBox close_type;
    private javax.swing.JLabel closing_id;
    private com.toedter.calendar.JDateChooser date1;
    private com.toedter.calendar.JDateChooser date11;
    private com.toedter.calendar.JDateChooser date111;
    private com.toedter.calendar.JDateChooser date2;
    private com.toedter.calendar.JDateChooser date22;
    private com.toedter.calendar.JDateChooser date222;
    private javax.swing.JTextArea description1;
    private javax.swing.JTextArea description2;
    private javax.swing.JTextArea details;
    private javax.swing.JTextField examount;
    private javax.swing.JLabel expense_id;
    private com.toedter.calendar.JDateChooser from;
    private com.toedter.calendar.JDateChooser itariki;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable7;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JComboBox material;
    private javax.swing.JLabel nail_id;
    private javax.swing.JTextField prod;
    private javax.swing.JComboBox prod1;
    private javax.swing.JComboBox prod_id;
    private com.toedter.calendar.JDateChooser purchasingdate1;
    private javax.swing.JTextField qty;
    private javax.swing.JLabel qty_update;
    private javax.swing.JLabel qty_update_nail_sales;
    private javax.swing.JLabel sale_id;
    private com.toedter.calendar.JDateChooser saledate;
    private com.toedter.calendar.JDateChooser search_date;
    private com.toedter.calendar.JDateChooser search_date_expense;
    private com.toedter.calendar.JDateChooser search_date_sale;
    private javax.swing.JTextField slip1;
    private javax.swing.JTextField slip2;
    private javax.swing.JTextField solde1;
    private javax.swing.JTextField solde2;
    private com.toedter.calendar.JDateChooser summarydate;
    private com.toedter.calendar.JDateChooser summarydate1;
    private com.toedter.calendar.JDateChooser to;
    private javax.swing.JTextField totexp;
    private javax.swing.JTextField totexp1;
    private javax.swing.JTextField totsal;
    private javax.swing.JTextField totsal1;
    private javax.swing.JTextField un;
    // End of variables declaration//GEN-END:variables
}
